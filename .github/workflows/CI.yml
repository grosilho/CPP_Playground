name: Docker CI

on:
  push:

env:
  CPM_SOURCE_CACHE: external-docker
  CCACHE_DIR: .ccache-docker
  DOCKER_CONDA_RUN: docker run --rm -v "$(pwd)":/src cpp conda run -n cpp /bin/bash -c

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: cpp
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y%m%d%H%M%S")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Load CPM Cache
        uses: actions/cache@v3
        with:        
          path: ${{env.CPM_SOURCE_CACHE}}
          key: docker-cpm-cache-${{steps.get-date.outputs.date}}
          restore-keys: docker-cpm-cache-
  
      - name: Load Ccache cache
        id: ccache-cache
        uses: actions/cache@v3
        with:
          path: ${{env.CCACHE_DIR}}
          key: ccache-docker-cache-${{steps.get-date.outputs.date}}
          restore-keys: ccache-docker-cache-

      - name: Configure tests
        run: ${{env.DOCKER_CONDA_RUN}} "cmake -S tests -B build/tests -GNinja -DCMAKE_AR=~/miniconda3/envs/cpp/bin/gcc-ar -D CPM_SOURCE_CACHE=/src/${{env.CPM_SOURCE_CACHE}} -D CMAKE_BUILD_TYPE=Debug"
      
      - name: Build tests
        run: ${{env.DOCKER_CONDA_RUN}} "cmake --build build/tests"

      - name: Run tests
        run: ${{env.DOCKER_CONDA_RUN}} "cd build/tests && ctest -D Experimental"

      - name: Print ccache stats
        run: ${{env.DOCKER_CONDA_RUN}} "ccache -s -v"

      - name: Code coverage report generation
        run: | 
            ${{env.DOCKER_CONDA_RUN}} "lcov -c -d build/tests -o build/tests/main_coverage.info"
            ${{env.DOCKER_CONDA_RUN}} "lcov --extract build/tests/main_coverage.info -o build/tests/filtered_coverage.info \"*LinAlg*\""

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4      
        with:
          disable_search: true
          files: ${{github.workspace}}/build/tests/filtered_coverage.info
          token: ${{secrets.CODECOV_TOKEN}}
