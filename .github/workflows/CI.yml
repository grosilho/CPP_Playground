
name: Configure, Build, and Test

on: push

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -S ${{github.workspace}}/tests -B ${{github.workspace}}/build/tests_${{env.BUILD_TYPE}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build/tests_${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build/tests_${{env.BUILD_TYPE}}
      run: ctest

    # - name: Generate Coverage
    #   working-directory: ${{github.workspace}}/build/tests_${{env.BUILD_TYPE}}
    #   run: lcov -c -d . -o main_coverage.info

    # - name: Upload results to Codecov
    #   uses: codecov/codecov-action@v4      
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #   # run: |
    #     # Replace `linux` below with the appropriate OS
    #     # Options are `alpine`, `linux`, `macos`, `windows`
    #     # curl -Os https://cli.codecov.io/latest/linux/codecov
    #     # chmod +x codecov
    #     # ./codecov --verbose upload-process --fail-on-error -t ${{ secrets.CODECOV_TOKEN }} -n 'service'-${{ github.run_id }} -F service -f coverage-service.xml
    - name: Code Coverage - Generation
      uses: danielealbano/lcov-action@v3
      with:
        gcov_path: /usr/bin/gcov-9
        remove_patterns: 3rdparty,tests

    - uses: codecov/codecov-action@v3
      with:
        files: ${{github.workspace}}/coverage.info
        flags: unittests # optional
        name: cachegrand-server
        fail_ci_if_error: false
        verbose: false
     
